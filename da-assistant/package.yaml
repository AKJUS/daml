name:                da-cli
version:             "1.0"
github:              "gaborh-da/da-cli"
author:              "Gabor Hosszu"
maintainer:          "gabor@digitalasset.com"
copyright:           "Digital Asset"

# Metadata used when publishing your package
# synopsis:            Short description of your package
# category:            development

# To avoid duplicated efforts in documentation and dealing with the
# complications of embedding Haddock markup inside cabal files, it is
# common to point users to the README.md file.
description: DA CLI

dependencies:
- base >= 4.7
- aeson
- aeson-extra
- attoparsec
- base
- bytestring
- conduit
- conduit-extra
- containers
- cryptohash
- directory >= 1.3.3.1
- either
- exceptions
- extra
- filepath
- foldl
- hashable
- haskeline
- http-api-data
- http-client
- http-client-tls
- http-conduit
- http-media
- http-types
- lens
- lifted-base
- monad-control
- monad-logger
- mtl
- natural-sort
- network
- optparse-applicative
- pipes-bytestring
- pipes-http
- pipes
- pretty-simple
- prettyprinter
- process
- safe-exceptions
- safe
- servant
- servant-client
- servant-client-core
- servant-server
- split
- sqlite-simple
- system-filepath
- multimap
- tagged
- tar-conduit
- tasty
- tasty-hunit
- temporary
- terminal-size
- text
- these
- time
- transformers
- transformers-base
- turtle
- unix-compat
- unordered-containers
- uri-encode
- validation
- vector
- warp
- yaml
when:
- condition: os(windows)
  then:
    dependencies:
    - Win32
  else:
    dependencies:
    - unix

executables:
  da-cli-exe:
    main:                Main.hs
    source-dirs:         .
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
  mock-server-exe:
    main:                Mockserver
    source-dirs:         .
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N

default-extensions:
    BangPatterns,
    DeriveDataTypeable,
    DeriveFoldable,
    DeriveFunctor,
    DeriveGeneric
    DeriveTraversable,
    FlexibleContexts,
    GeneralizedNewtypeDeriving,
    LambdaCase,
    NamedFieldPuns,
    PackageImports,
    RecordWildCards,
    ScopedTypeVariables,
    StandaloneDeriving,
    TupleSections,
    TypeApplications,
    ViewPatterns
