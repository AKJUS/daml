# Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

load("//bazel_tools:haskell.bzl", "da_haskell_library", "da_haskell_test")
load("//bazel_tools:proto.bzl", "proto_gen")

proto_library(
  name = "scenario_service_proto",
  srcs = ["scenario_service.proto"],
  deps = [],
  visibility = ["//visibility:public"]
)



proto_gen(
  name = "scenario_service_java_proto_src",
  srcs = [":scenario_service_proto"],
  plugin_name = "java",
  visibility = ["//visibility:public"]
)

proto_gen(
  name = "scenario_service_java_proto_grpc_src",
  srcs = [":scenario_service_proto"],
  plugin_name = "java-grpc",
  plugin_exec = "@io_grpc_grpc_java//compiler:grpc_java_plugin",
  visibility = ["//visibility:public"]
)

# FIXME(JM): java_grpc_library should do this for us,
# but cannot quite make it work. Also not sure if it
# makes sense to mix the //3rdparty dependencies with
# the stuff it pulls in...
java_library(
  name = "scenario_service_java_proto",
  srcs = [":scenario_service_java_proto_src", ":scenario_service_java_proto_grpc_src"],
  deps = [
    "//3rdparty/jvm/com/google/protobuf:protobuf_java",
    "//3rdparty/jvm/io/grpc:grpc_protobuf",
    "//3rdparty/jvm/io/grpc:grpc_core",
    "//3rdparty/jvm/io/grpc:grpc_stub",
  ],
  visibility = ["//visibility:public"]
)

# FIXME(JM): Modify compile-proto-file to allow specifying
# the output file and module name rather than directory.
genrule(
  name = "scenario_service_haskell_proto_src",
  outs = ["ScenarioService.hs"],
  srcs = ["scenario_service.proto"],
  tools = [
    "//nix/third-party/proto3-suite:compile-proto-file"
  ],
  cmd = """
    ORIGPWD=$$PWD
    cd compiler/scenario-service/protos
    $$ORIGPWD/$(location //nix/third-party/proto3-suite:compile-proto-file) \
      --proto scenario_service.proto --out "$$ORIGPWD/$(@D)"
  """
)

da_haskell_library(
  name = "scenario_service_haskell_proto",
  srcs = [":scenario_service_haskell_proto_src"],
  deps = [
    "//nix/third-party/proto3-suite:proto3-suite",
    "//nix/third-party/proto3-wire:proto3-wire",
    "//nix/third-party/gRPC-haskell:grpc-haskell",
    "//nix/third-party/gRPC-haskell/core:grpc-haskell-core",
  ],
  hazel_deps = [
    "base",
    "bytestring",
    "deepseq",
    "text",
    "vector",
  ],
  visibility = ["//visibility:public"]
)

